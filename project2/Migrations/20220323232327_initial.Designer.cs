// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project2.Models;

namespace project2.Migrations
{
    [DbContext(typeof(AppointmentFormContext))]
    [Migration("20220323232327_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("project2.Models.AppointmentForm", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeSlotID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppointmentID");

                    b.HasIndex("TimeSlotID");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            AppointmentID = 1,
                            Email = "kyliefromm@gmail.com",
                            GroupName = "Kylie",
                            GroupSize = 5,
                            Phone = "801-555-5555",
                            TimeSlotID = 1
                        });
                });

            modelBuilder.Entity("project2.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppointmentTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsTaken")
                        .HasColumnType("INTEGER");

                    b.HasKey("TimeSlotID");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            TimeSlotID = 1,
                            AppointmentTime = "8:00 AM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 2,
                            AppointmentTime = "9:00 AM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 3,
                            AppointmentTime = "10:00 AM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 4,
                            AppointmentTime = "11:00 AM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 5,
                            AppointmentTime = "12:00 PM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 6,
                            AppointmentTime = "1:00 PM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 7,
                            AppointmentTime = "2:00 PM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 8,
                            AppointmentTime = "3:00 PM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 9,
                            AppointmentTime = "4:00 PM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 10,
                            AppointmentTime = "5:00 PM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 11,
                            AppointmentTime = "6:00 PM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 12,
                            AppointmentTime = "7:00 PM",
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotID = 13,
                            AppointmentTime = "8:00 PM",
                            IsTaken = false
                        });
                });

            modelBuilder.Entity("project2.Models.AppointmentForm", b =>
                {
                    b.HasOne("project2.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
